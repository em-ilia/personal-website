/* ----------------- */
/* Custom Properties */
/* ----------------- */
/* Many of the prop-
 * erties here are
 * where the substa-
 * ntive changes
 * will be made      */
/* colors */
/* Black */
/* Gray */
/* White */
/* font */
/* Sizes divided by 16 so values given in px */
/* ----- */
/* Reset */
/* ----- */
*,
*::before,
*::after {
  box-sizing: border-box;
}

body, h1, h2, h3, h4, h5, h6, p {
  margin: 0;
}

h1, h2, h3, h4, h5, h6, p {
  font-weight: 400;
}

h1, h2, h3 {
  line-height: 1.1;
}

body {
  font-family: sans-serif;
  font-size: 1.5rem;
  color: hsl(0deg, 0%, 0%);
  background-color: hsl(0deg, 0%, 100%);
  line-height: 1.5;
  min-height: 100vh;
}

main {
  margin-left: 1vw;
  margin-top: 1vh;
}

img, picture {
  max-width: 100%;
  display: block;
}

input, button, textarea, select {
  font: inherit;
}

@media (prefers-reduced-motion: reduce) {
  *,
*::before,
*::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behaviour: auto !important;
  }
}
/* --------------- */
/* Utility Classes */
/* --------------- */
/* Layouts */
.container {
  padding-inline: 4rem;
  margin-inline: auto;
  max-width: 80rem;
}

.flex {
  display: flex;
  gap: 2rem;
}

.column {
  justify-content: center;
  align-items: center;
  flex-direction: column;
  align-content: center;
}

.row {
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-evenly;
  align-content: baseline;
  max-width: 100%;
}

.two-columns {
  display: grid;
  /* Will shrink to one column, never exceed two!
   * The `max` in `minmax` asks that the columns
   * be no smaller */
  grid-template-columns: repeat(auto-fit, minmax(max(30rem, 40%), 1fr));
  column-gap: 1rem;
  justify-content: space-evenly;
}

.lock-bottom {
  position: absolute;
  bottom: 0%;
}

/* Other */
.hr::after { /* Add fake hr after header */
  content: "";
  position: absolute;
  display: block;
  clear: both;
  width: 100%;
  height: 0.15rem;
  background-color: black;
}

/* Color Classes */
.bg-dark {
  background-color: hsl(0deg, 0%, 0%);
}

.bg-light {
  background-color: hsl(0deg, 0%, 50%);
}

.bg-white {
  background-color: hsl(0deg, 0%, 100%);
}

.text-dark {
  color: hsl(0deg, 0%, 0%);
}

.text-light {
  color: hsl(0deg, 0%, 50%);
}

.text-white {
  color: hsl(0deg, 0%, 100%);
}

/* Font Classes */
.fs-900 {
  font-size: 7.8125rem;
}

.fs-800 {
  font-size: 4.6875rem;
}

.fs-700 {
  font-size: 3.5rem;
}

.fs-600 {
  font-size: 2rem;
}

.fs-500 {
  font-size: 1.75rem;
}

.fs-400 {
  font-size: 1.5rem;
}

.fs-300 {
  font-size: 1.125rem;
}

.fs-200 {
  font-size: 1rem;
}

.ff-serif {
  font-family: serif;
}

.ff-sans-cond {
  font-family: sans-serif;
}

.ff-sans {
  font-family: sans-serif;
}

.uppercase {
  text-transform: uppercase;
}

.lowercase {
  text-transform: lowercase;
}

/* Semantic Tags and Their Classes */
header {
  margin-bottom: 3vh;
}

section:not(:last-of-type) {
  margin-bottom: 3vh;
}

footer {
  margin-top: 3vh;
}

/* -------------------- */
/* Non-Reusable Classes */
/* -------------------- */
/* meant for these pages
 * only, not to be used
 * in practice          */
.colors--block {
  padding: 3rem 1rem 1rem;
  border: 1px solid black;
}

/*# sourceMappingURL=base.css.map */
